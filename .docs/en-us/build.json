{
	"title": "Building from source",
	"content": [
		{
			"title": "Prerequisites",
			"content": [
				"Before you build $isxboot$$ from source, make sure you have the following programs installed and in your PATH:$L",
				"$lLLVM ($Cclang$$ and $Cld.lld$$), version 10 $irecommended$$$$",
				"$l$Cnasm$$ Assembler, version 2.x$$",
				"$lGNU $Cmake$$$$",
				"$l$Cgit$$, to download the source code$$",
				"$$",
				"It is recommended you build on Unix(-like) operating systems.",
				{
					"title": "Preparation on FreeBSD",
					"content": [
						"On FreeBSD, LLVM comes pre-installed. To install the additional programs, run:$n",
						"$t$Cpkg update$$$n",
						"$t$Cpkg install nasm gmake git$$$n$n",
						"$bNote: $$Because GNU make will be installed as $Cgmake$$, you will need to use the $Cgmake$$ command instead of $Cmake$$ in the next steps."
					]
				}
			]
		},
		{
			"title": "Build Steps",
			"content": [
				"Download the source code:$n$n",
				"$t$Cgit clone https://git.omegazero.org/sxboot/core.git$$$n",
				"$t$Ccd core$$$n$n",
				"Create the target directory and compile everything using default settings:$n$n",
				"$t$Cmkdir ../bin$$$n",
				"$t$Cmake world$$$n$n",
				"More build options are listed below.$n$n",
				"Temporary files and the executable images will be stored at $C../bin/$$ by default, relative to where the build is started,",
				" meaning if you clone the repository to $C/usr/local/sxboot/core$$ and run $Cmake$$ there, the files will be written to $C/usr/local/sxboot/bin/...$$ ."
			]
		},
		{
			"title": "Build Options",
			"content": [
				{
					"title": "Targets",
					"content": [
						"$L",
						"$l$Croot$$ - Compile only the essential components.$$",
						"$l$Cmodules$$ - Compile only modules. Modules include: disk drivers, additional file system drivers, boot modules.$$",
						"$l$Cworld$$ - Compile everything ($Croot$$ and $Cmodules$$).$$",
						"$l$Cclean$$ - Delete intermediate object files.$$",
						"$$"
					]
				},
				{
					"title": "Arguments",
					"content": [
						"$L",
						"$l$CARCH$$ - Target architecture. Valid options are $Camd64$$ and $Ci386$$. $bDefault:$$ $Camd64$$$$",
						"$l$CBINDIR$$ - Where to write the resulting executable files. $bDefault:$$ $C../bin/ARCH$$ (ARCH is replaced by the name of the architecture)$$",
						"$l$CWINDOWS$$ - Set to $Cyes$$ if you are building on Windows. $bDefault:$$ <none>$$",
						"$$"
					]
				}
			]
		}
	]
}
